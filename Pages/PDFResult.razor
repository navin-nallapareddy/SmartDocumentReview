@page "/result/{FileName}"
@inject NavigationManager Nav

@* 
  Renders the stock pdf.js viewer in an iframe.
  Assumes your pdf.js assets live at /pdfjs/web/viewer.html
  and uploaded PDFs are served from /uploads/{fileName}.
*@
@if (!string.IsNullOrWhiteSpace(ViewerUrl))
{
    <iframe src="@ViewerUrl"
            title="PDF Viewer"
            style="width:100%;height:80vh;border:none;"></iframe>
}
else
{
    <div class="text-red-600">No PDF to display.</div>
}

@code {
    [Parameter] public string? FileName { get; set; }
    public string ViewerUrl { get; set; } = string.Empty;

    protected override void OnParametersSet()
    {
        if (string.IsNullOrWhiteSpace(FileName))
        {
            ViewerUrl = string.Empty;
            return;
        }

        // Respect app sub-paths (e.g., ASPNETCORE_PATHBASE=/app)
        // NavigationManager.BaseUri â†’ "https://host[:port]/[pathbase]/"
        var basePath = new Uri(Nav.BaseUri).AbsolutePath.TrimEnd('/'); // "" or "/app"
        string PathBaseAware(string relative) =>
            string.IsNullOrEmpty(basePath) || basePath == "/"
                ? relative
                : $"{basePath}{relative}";

        // Build a same-origin, URL-encoded file path for the viewer
        var encodedFileName = Uri.EscapeDataString(FileName);
        var pdfUrl = PathBaseAware($"/uploads/{encodedFileName}");
        var encodedPdfUrl = Uri.EscapeDataString(pdfUrl);

        ViewerUrl = PathBaseAware($"/pdfjs/web/viewer.html?file={encodedPdfUrl}");
    }
}
