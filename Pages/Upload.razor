@page "/"
@using Microsoft.AspNetCore.Components.Forms
@using SmartDocumentReview.Services
@using SmartDocumentReview.Models
@using SmartDocumentReview.Data
@using System.IO
@using System.Text.RegularExpressions
@inject AuthService AuthService
@inject PdfKeywordTagger Tagger
@inject TagDbContext Db
@inject IJSRuntime JS
@inject ResultStateService ResultStateService

<div class="min-h-screen p-6">
    <h3 class="text-2xl font-semibold text-center mb-6">Smart Document Review</h3>
    <div class="max-w-7xl mx-auto space-y-6">
        <div class="bg-white shadow rounded-lg p-6">
            <p class="font-medium mb-4">Welcome, @AuthService.CurrentUser!</p>

            <EditForm Model="this" OnValidSubmit="HandleValidSubmit">
                <div class="flex flex-col md:flex-row gap-4 items-start">
                    <!-- File Upload Container -->
                    <div style="width: 600px;">
                        <label class="block mb-2 text-sm font-medium text-gray-700">Upload PDF:</label>
                        <InputFile class="w-full px-3 py-2 border border-gray-300 rounded-lg"
                                   OnChange="HandleFileSelected"
                                   accept=".pdf" />
                    </div>

                    <!-- Keyword Text Area Container -->
                    <div style="flex: 1; min-width: 300px;">
                        <label class="block mb-2 text-sm font-medium text-gray-700">Enter up to 5 keywords (one per line):</label>
                        <InputTextArea class="w-full px-3 py-2 border border-gray-300 rounded-lg resize-none"
                                       @bind-Value="RawKeywordInput"
                                       style="height: 150px;" />
                    </div>
                </div>

                <button type="submit"
                        class="mt-4 bg-blue-600 hover:bg-blue-700 text-white font-medium px-4 py-2 rounded-lg disabled:opacity-50 flex items-center justify-center gap-2"
                        disabled="@IsProcessing">
                    @if (IsProcessing)
                    {
                        <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z"></path>
                        </svg>
                        @ElapsedTime
                    }
                    else
                    {
                        <span>Process</span>
                    }
                </button>
            </EditForm>

            @if (ErrorMessage != null)
            {
                <div class="mt-4 text-red-600">@ErrorMessage</div>
            }
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            @if (MatchedKeywords.Any())
            {
                <div class="bg-white shadow rounded-lg p-6 overflow-y-auto max-h-[60vh]">
                    @foreach (var match in MatchedKeywords)
                    {
                        <div class="mb-6">
                            <h4 @onclick="() => LoadPdf(match.PageNumber, match.Keyword)" class="cursor-pointer text-blue-600 hover:underline">
                                @match.SectionTitle
                            </h4>
                            <p>@(HighlightKeyword(match.MatchedText, match.Keyword))</p>
                        </div>
                    }
                </div>
            }
        </div>
    </div>

    <!-- ðŸ†• Summary Panel (Full-Width Outside Container) -->
    <div class="px-6 mt-4">
        <div class="w-full bg-white shadow rounded-lg h-[60vh] p-4 overflow-y-auto">
            @if (MatchedKeywords.Any())
            {
                <iframe id="pdfViewer" class="w-full h-full" frameborder="0"></iframe>
            }
            else
            {
                <div class="h-full flex items-center justify-center text-gray-500">
                    <p>Summary will appear here after processing.</p>
                </div>
            }
        </div>
    </div>
</div>
